// <auto-generated />
using System;
using AppCordTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppCordTask.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppCordTask.Data.Entities.MessageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumberId");

                    b.ToTable("MessageLog");
                });

            modelBuilder.Entity("AppCordTask.Data.Entities.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("PhoneNumber");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "Phone Number1"
                        },
                        new
                        {
                            Id = 2,
                            Number = "Phone Number2"
                        },
                        new
                        {
                            Id = 3,
                            Number = "Phone Number3"
                        },
                        new
                        {
                            Id = 4,
                            Number = "Phone Number4"
                        },
                        new
                        {
                            Id = 5,
                            Number = "Phone Number5"
                        },
                        new
                        {
                            Id = 6,
                            Number = "Phone Number6"
                        },
                        new
                        {
                            Id = 7,
                            Number = "Phone Number7"
                        },
                        new
                        {
                            Id = 8,
                            Number = "Phone Number8"
                        },
                        new
                        {
                            Id = 9,
                            Number = "Phone Number9"
                        },
                        new
                        {
                            Id = 10,
                            Number = "Phone Number10"
                        },
                        new
                        {
                            Id = 11,
                            Number = "Phone Number11"
                        },
                        new
                        {
                            Id = 12,
                            Number = "Phone Number12"
                        },
                        new
                        {
                            Id = 13,
                            Number = "Phone Number13"
                        },
                        new
                        {
                            Id = 14,
                            Number = "Phone Number14"
                        },
                        new
                        {
                            Id = 15,
                            Number = "Phone Number15"
                        },
                        new
                        {
                            Id = 16,
                            Number = "Phone Number16"
                        },
                        new
                        {
                            Id = 17,
                            Number = "Phone Number17"
                        },
                        new
                        {
                            Id = 18,
                            Number = "Phone Number18"
                        },
                        new
                        {
                            Id = 19,
                            Number = "Phone Number19"
                        },
                        new
                        {
                            Id = 20,
                            Number = "Phone Number20"
                        },
                        new
                        {
                            Id = 21,
                            Number = "Phone Number21"
                        },
                        new
                        {
                            Id = 22,
                            Number = "Phone Number22"
                        },
                        new
                        {
                            Id = 23,
                            Number = "Phone Number23"
                        },
                        new
                        {
                            Id = 24,
                            Number = "Phone Number24"
                        },
                        new
                        {
                            Id = 25,
                            Number = "Phone Number25"
                        },
                        new
                        {
                            Id = 26,
                            Number = "Phone Number26"
                        },
                        new
                        {
                            Id = 27,
                            Number = "Phone Number27"
                        },
                        new
                        {
                            Id = 28,
                            Number = "Phone Number28"
                        },
                        new
                        {
                            Id = 29,
                            Number = "Phone Number29"
                        },
                        new
                        {
                            Id = 30,
                            Number = "Phone Number30"
                        },
                        new
                        {
                            Id = 31,
                            Number = "Phone Number31"
                        },
                        new
                        {
                            Id = 32,
                            Number = "Phone Number32"
                        },
                        new
                        {
                            Id = 33,
                            Number = "Phone Number33"
                        },
                        new
                        {
                            Id = 34,
                            Number = "Phone Number34"
                        },
                        new
                        {
                            Id = 35,
                            Number = "Phone Number35"
                        },
                        new
                        {
                            Id = 36,
                            Number = "Phone Number36"
                        },
                        new
                        {
                            Id = 37,
                            Number = "Phone Number37"
                        },
                        new
                        {
                            Id = 38,
                            Number = "Phone Number38"
                        },
                        new
                        {
                            Id = 39,
                            Number = "Phone Number39"
                        },
                        new
                        {
                            Id = 40,
                            Number = "Phone Number40"
                        },
                        new
                        {
                            Id = 41,
                            Number = "Phone Number41"
                        },
                        new
                        {
                            Id = 42,
                            Number = "Phone Number42"
                        },
                        new
                        {
                            Id = 43,
                            Number = "Phone Number43"
                        },
                        new
                        {
                            Id = 44,
                            Number = "Phone Number44"
                        },
                        new
                        {
                            Id = 45,
                            Number = "Phone Number45"
                        },
                        new
                        {
                            Id = 46,
                            Number = "Phone Number46"
                        },
                        new
                        {
                            Id = 47,
                            Number = "Phone Number47"
                        },
                        new
                        {
                            Id = 48,
                            Number = "Phone Number48"
                        },
                        new
                        {
                            Id = 49,
                            Number = "Phone Number49"
                        },
                        new
                        {
                            Id = 50,
                            Number = "Phone Number50"
                        },
                        new
                        {
                            Id = 51,
                            Number = "Phone Number51"
                        },
                        new
                        {
                            Id = 52,
                            Number = "Phone Number52"
                        },
                        new
                        {
                            Id = 53,
                            Number = "Phone Number53"
                        },
                        new
                        {
                            Id = 54,
                            Number = "Phone Number54"
                        },
                        new
                        {
                            Id = 55,
                            Number = "Phone Number55"
                        },
                        new
                        {
                            Id = 56,
                            Number = "Phone Number56"
                        },
                        new
                        {
                            Id = 57,
                            Number = "Phone Number57"
                        },
                        new
                        {
                            Id = 58,
                            Number = "Phone Number58"
                        },
                        new
                        {
                            Id = 59,
                            Number = "Phone Number59"
                        },
                        new
                        {
                            Id = 60,
                            Number = "Phone Number60"
                        },
                        new
                        {
                            Id = 61,
                            Number = "Phone Number61"
                        },
                        new
                        {
                            Id = 62,
                            Number = "Phone Number62"
                        },
                        new
                        {
                            Id = 63,
                            Number = "Phone Number63"
                        },
                        new
                        {
                            Id = 64,
                            Number = "Phone Number64"
                        },
                        new
                        {
                            Id = 65,
                            Number = "Phone Number65"
                        },
                        new
                        {
                            Id = 66,
                            Number = "Phone Number66"
                        },
                        new
                        {
                            Id = 67,
                            Number = "Phone Number67"
                        },
                        new
                        {
                            Id = 68,
                            Number = "Phone Number68"
                        },
                        new
                        {
                            Id = 69,
                            Number = "Phone Number69"
                        },
                        new
                        {
                            Id = 70,
                            Number = "Phone Number70"
                        },
                        new
                        {
                            Id = 71,
                            Number = "Phone Number71"
                        },
                        new
                        {
                            Id = 72,
                            Number = "Phone Number72"
                        },
                        new
                        {
                            Id = 73,
                            Number = "Phone Number73"
                        },
                        new
                        {
                            Id = 74,
                            Number = "Phone Number74"
                        },
                        new
                        {
                            Id = 75,
                            Number = "Phone Number75"
                        },
                        new
                        {
                            Id = 76,
                            Number = "Phone Number76"
                        },
                        new
                        {
                            Id = 77,
                            Number = "Phone Number77"
                        },
                        new
                        {
                            Id = 78,
                            Number = "Phone Number78"
                        },
                        new
                        {
                            Id = 79,
                            Number = "Phone Number79"
                        },
                        new
                        {
                            Id = 80,
                            Number = "Phone Number80"
                        },
                        new
                        {
                            Id = 81,
                            Number = "Phone Number81"
                        },
                        new
                        {
                            Id = 82,
                            Number = "Phone Number82"
                        },
                        new
                        {
                            Id = 83,
                            Number = "Phone Number83"
                        },
                        new
                        {
                            Id = 84,
                            Number = "Phone Number84"
                        },
                        new
                        {
                            Id = 85,
                            Number = "Phone Number85"
                        },
                        new
                        {
                            Id = 86,
                            Number = "Phone Number86"
                        },
                        new
                        {
                            Id = 87,
                            Number = "Phone Number87"
                        },
                        new
                        {
                            Id = 88,
                            Number = "Phone Number88"
                        },
                        new
                        {
                            Id = 89,
                            Number = "Phone Number89"
                        },
                        new
                        {
                            Id = 90,
                            Number = "Phone Number90"
                        },
                        new
                        {
                            Id = 91,
                            Number = "Phone Number91"
                        },
                        new
                        {
                            Id = 92,
                            Number = "Phone Number92"
                        },
                        new
                        {
                            Id = 93,
                            Number = "Phone Number93"
                        },
                        new
                        {
                            Id = 94,
                            Number = "Phone Number94"
                        },
                        new
                        {
                            Id = 95,
                            Number = "Phone Number95"
                        },
                        new
                        {
                            Id = 96,
                            Number = "Phone Number96"
                        },
                        new
                        {
                            Id = 97,
                            Number = "Phone Number97"
                        },
                        new
                        {
                            Id = 98,
                            Number = "Phone Number98"
                        },
                        new
                        {
                            Id = 99,
                            Number = "Phone Number99"
                        },
                        new
                        {
                            Id = 100,
                            Number = "Phone Number100"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AppCordTask.Data.Entities.MessageLog", b =>
                {
                    b.HasOne("AppCordTask.Data.Entities.PhoneNumber", "PhoneNumber")
                        .WithMany("MessageLogs")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
